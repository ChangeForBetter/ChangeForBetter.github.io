<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[模式匹配算法 KMP]]></title>
    <url>%2F2017%2F12%2F06%2Falgorithm%2FKMP%2F</url>
    <content type="text"><![CDATA[问题描述 在主字符串string(abcabcabx)中找到匹配到子串pattern(abcabx),返回pattern在string中的index暴力匹配时间复杂度O(m*n), KMP时间复杂度O(m+n) 最长相同前后缀, next 数组next[i] = pattern 前 i+1 个字符的最长相同前后缀长度 pattern对应index 字符串 最长相同前后缀 最长相同前后缀长度 0 a 不存在 0 1 ab 不存在 0 2 abc 不存在 0 3 abca a 1 4 abcab ab 2 5 abcabx 不存在 0 123char: | a | b | c | a | b | x |index: | 0 | 1 | 2 | 3 | 4 | 5 |value: | 0 | 0 | 0 | 1 | 2 | 0 | 所以abcabx的next数组为:[0, 0, 0, 1, 2, 0] 使用 next 数组(KMP算法) 要点: 保持 i 不会回溯 next[j]保存的是 pattern 前 j+1 个字符的最长相同前后缀长度 string[i] != pattern[j], string[i] 可跳过 pattern 前 next[j-1] 个字符进行比较 过程:string[i] == pattern[j]时, ++i, ++jstring[i] != pattern[j]时, j == 0;i 往后移动, 即: ++i j != 0;可保持 i 不动, 跳过 string[i] 与 pattern 前 next[j-1] 个字符做比较, 减少比较次数, 即: j = next[j-1]直接比较 string[i] 和 pattern[j] 1.string[i] == pattern[j], ++i, ++j i 5 string a b c a b c a b x pattern a b c a b x j 2 4 5 2.string[5] != pattern[5]3.next[4] = 2, 即: 保持 i 不动, 跳过 pattern 前 2 个字符, 比较 string[5] 和 pattern[2] i 5 string a b c a b c a b x pattern a b c a b x j 2 Python实现next 数组12345678910111213141516171819def get_next(pattern): length = len(pattern) next_array = [0] * length prefix, suffix = 0, 1 while suffix &lt; length: # pattern[prefix]: 前缀字符 # pattern[suffix]: 后缀字符 if pattern[suffix] == pattern[prefix]: prefix += 1 # next_array[i] = pattern 前 i+1 个字符的最长相同前后缀长度 next_array[suffix] = prefix suffix += 1 # 当前位置的 pattern 没有最长前后缀, 长度为初始化的 0 elif prefix == 0: suffix += 1 # 类似在后缀中匹配前缀 else: prefix = next_array[prefix-1] return next_array KMP算法1234567891011121314151617181920def index_kmp(string, pattern, pos=0): i, j = pos, 0 len_string, len_pattern = len(string), len(pattern) next_array = get_next(pattern) # print next_array while i &lt; len_string and j &lt; len_pattern: # print string[:i + 1] # print " " * (i - j) + pattern[:j + 1] # print "-" * len_string if string[i] == pattern[j]: i += 1 j += 1 elif j == 0: i += 1 else: j = next_array[j-1] if j == len_pattern: return i - len_pattern else: return 参考链接前后缀KMP匹配过程next数组]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>KMP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo 部署到 GitHubPages]]></title>
    <url>%2F2017%2F12%2F01%2Fhexo%2FGitHubPages%2F</url>
    <content type="text"><![CDATA[背景: GitHubPages 可以免费托管静态文件, 而且自带 cdn 加速 托管到 GitHubPages 不用自己倒腾服务器, 让自己更专注于写博客 创建 github 仓库GitHub Pages 读取的仓库是YOUR-USERNAME.github.io所以仓库名必须是YOUR-USERNAME.github.io 部署 hexo 到 GitHubPages hexo 安装 hexo-deployer-gitnpm install hexo-deployer-git --save 配置 hexo 12345deploy: type: git repo: [repository url] # github 仓库地址 branch: [branch] # 分支名称(master) message: [message] # 自定义提交信息, 默认是 Site updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125; 部署 hexo 到 GitHubPageshexo clean # 清除缓存和之前生成的静态文件hexo deploy --setup # 上传到静态文件github hexo 会以~/.gitconfig里面配置的user.name和user.email作为提交人身份信息 第一次部署时会要求输入github用户名和密码, 后续不用再输入 部署成功后可直接用过YOUR-USERNAME.github.io访问hexo, 因为GitHubPages会强制升级成https, 所以next不支持https的相关功能会失效(比如百度分享) 绑定个人域名 购买域名 YOUR-USERNAME.github.io绑定个人域名 配置完后会在仓库根目录生成一个CNAME文件, 文件内容为绑定的个人域名 只能绑定一个个人域名 hexo部署时默认不会生成CNAME文件, 可在 hexosource目录下添加CNAME文件, hexo deploy会将其加入到public目录中 README.md hexo部署时默认不会有README.md, 可在source目录下创建并且编辑README.md hexo默认会将source目录下的所有md文件渲染成成html文件, 需要配置hexo不要对README.md进行渲染12skip_render: # 不要对 README.md 进行渲染 - README.md 个人域名配置域名解析CNAME 记录类型 主机记录 记录值 CNAME www YOUR-USERNAME.github.io CNAME @ YOUR-USERNAME.github.io]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo + next 搭建个人博客]]></title>
    <url>%2F2017%2F11%2F27%2Fhexo%2Fhexo%2F</url>
    <content type="text"><![CDATA[hexo安装需要预先安装 git 和 nodenode二进制文件下载链接: https://nodejs.org/dist/latest/node二进制可执行压缩包解压后需要将bin目录全路径加入环境变量PATH中1234567891011121314# 解压 node 二进制压缩包tar -zxvf node-v9.2.0-linux-x64.tar.gz -C /usr/local/mv /usr/local/node-v9.2.0-linux-x64 /usr/local/nodejs# 添加环境变量 PATH 添加 node bin 目录全路径vi ~/.bashrcexport NODE_BIN="/usr/local/nodejs/bin"export PATH=$PATH:$&#123;NODE_BIN&#125;# 使环境变量生效source ~/.bashrc# 安装 hexo; npm 默认在 node bin 目录中npm install -g hexo-cli hexo基本命令 建站hexo init &lt;hexo-folder&gt;cd &lt;hexo-folder&gt;npm install 添加标签页/分类页hexo new page tags/categories默认没有标签页/分类页生成 page 后需要配置 md 属性, type: tags/categories 列出资源文件信息(post/page/tag/category)hexo list post 生成静态文件(文件存放在public目录)hexo generate 启动 hexohexo server -p 80 -s -l hexo配置(_config.yml)123456title: SkyLiu # 网站标题subtitle: # 网站副标题description: "厚德博学，崇实去浮。" # 网站描述author: SkyLiu # 名字language: zh-Hans # 语言timezone: Asia/Shanghai # 时区 使用next主题 下载 next 到 theme 目录下cd &lt;hexo-folder&gt;git clone https://github.com/iissnan/hexo-theme-next themes/next 配置 hexo _config.ymltheme: next # 主题, 默认是landscape next主题配置(_config.yml)12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788# next 主题配置# https://github.com/iissnan/hexo-theme-next/blob/master/README.cn.mdscheme: Pisces # Muse(默认) | Mist | Pisces | Gemini# 设置菜单# fa 图标名称搜索: https://www.thinkcmf.com/font/search/index.html# 搜出来的名字去掉前缀 fa-# http://theme-next.iissnan.com/getting-started.html#menu-settings# name: 访问地址 || Font Awesome 图标名称# name 对应不同语言显示的名字在 next 的 languages/语言.yml 中(languages/zh-Hans.yml)menu: home: / || home # 首页 about: /about/ || user # 关于(默认没有) tags: /tags/ || tags # 标签(默认没有) categories: /categories/ || th # 分类(默认没有) archives: /archives/ || archive # 归档 comments: /comments/ || comments # 留言板(自定义)menu_icons: enable: true # 显示 fa 图标# 侧边栏社交信息# http://theme-next.iissnan.com/theme-settings.html#author-sites# 显示名字: 链接 || Font Awesome 图标名称social: GitHub: your github || github 新浪微博: your weibo || weibosocial_icons: enable: ture # 是否线显示 fa 图标 icons_only: false # 是否只显示图标, 不显示名字 transition: false # 改了跟没改看不出什么区别links_title: 友情链接links_layout: block # block(横铺) | inline(纵铺)links:# 显示名字: 链接 知乎: https://www.zhihu.com/ 百度: https://www.baidu.com/# 侧边栏(Pisces方案)sidebar: position: left # 侧边栏位置 left | right offset: 12 # 侧边栏和菜单栏间隔像素值 b2t: true # 置顶图标是否在侧边栏显示 scrollpercent: true # 置顶图标下面是否显示滚屏百分比# 文章目录toc: enable: true number: true # 文章目录是否带数字编号 wrap: true # 小标题过长是否换行显示# 阅读全文# 三种方式: http://www.jianshu.com/p/78c218f9d1e7# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.# 建议在显示概要后面加上&lt;!-- more --&gt;, 不影响文章显示结构auto_excerpt: enable: false # 在主页显示的时候, 是否默认在页面150字数位置截断 length: 150motion: enable: true # 是否以动画形式加载页面(可配置成 false 加速页面显示) async: true # 是否异步加载多个板块post_meta: item_text: true created_at: true # 是否显示发表于 updated_at: true # 是否显示更新于 categories: true # 是否显示分类# 字体显示font: codes: external: true family: Mono # 代码块字体格式为Mono size: 10 # 字体大小# 设置代码高亮# http://theme-next.iissnan.com/theme-settings.html#syntax-highlight-schemehighlight_theme: normal # normal | night | night blue | night bright | night eightiesfooter: since: 2017 # 博客起始年份 theme: version: false # 不显示 next 版本信息# 百度分享, 不支持 httpsbaidushare: type: button 文章阅读次数统计/文章评论(LeanCloud) 配置leancloud, 获取 AppID 和 AppKey LeanCloud 创建 class Counter(文章阅读次数统计), Comment(文章评论) 配置next_config.yml12345678910111213141516171819202122# 文章阅读次数配置leancloud_visitors: enable: true app_id: leanclound AppID app_key: leanclound AppKey# 文章评论配置# 版本一: leancloud valine 版(不太好看, LeanCloud提供)# 需要安装 valine: npm install valine --save# https://valine.js.orgvaline: enable: true appid: leanclound AppID appkey: leanclound AppKey notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: 评论框为空的时候显示的内容# 版本二: hypercomments(简洁好用, 配置方便)# 需配置hypercomments得到id# http://blog.rmiao.top/2017/07/16/hexo-next-hypercomments/hypercomments_id: your hypercomments id 文章 Front-matter 配置1234567891011---title: "hexo + next 搭建个人博客" # 标题date: 2017-11-27 00:24:31 # 发布时间updated: # 更新日期comments: true # 是否开启文章评论tags: - hexo # 标签categories: - hexo # 分类type: # 类型 categories | tags--- 文章搜索(Local Search) 安装hexo-generator-searchdb, 站点根目录执行命令行npm install hexo-generator-searchdb --save 配置 hexo _config.yml 12345search: path: search.xml field: post format: html limit: 10000 配置 next _config.yml 1234local_search: enable: true trigger: auto # auto(搜索框内容改变就会进行搜索) | manual(按回车就进行搜索) top_n_per_article: 1 # 显示每篇每篇文章搜索到的前n个结果 其他hexo 标签数/分类数显示不一致 停止hexo hexo clean 启动hexo hexo-markdown-emoji渲染亲测会导致&lt;!-- more--&gt;失效emoji小抄链接 卸载hexo-renderer-markednpm uninstall hexo-renderer-marked --save 安装hexo-renderer-markdown-it, markdown-it-emojinpm install hexo-renderer-markdown-it --savenpm install markdown-it-emoji --save 配置hexo1234567markdown: plugins: - markdown-it-footnote - markdown-it-sup - markdown-it-sub - markdown-it-abbr - markdown-it-emoji # emoji渲染]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
